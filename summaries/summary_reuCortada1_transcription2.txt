**RESUMEN:**

**Puntos Principales:**

1. Se llevó a cabo un laboratorio utilizando Chrome 3, Cloud Front y un bucket de S3 para crear una página web estática con error page personalizado.
2. Se configuró una web protegida por Chrome y un Routic 53 para proteger el DNS o el dominio.
3. Se creó una base de datos en RDS con una instancia y se conectó al MiceCole Warbench.
4. También se creó una función de Python para conectarse al RDS y mostrar/insertar datos en la base de datos.

**Detalles Importantes:**

1. Cloud Front distribuye la página web estática en 200 puntos de conexión para mejorar la atención.
2. El error page se creó para gestionar errores en el link, URL, cuando hay un error de protocolo HTTP o un bloqueo de países.
3. Se creó una política de seguridad en RDS para conectarse al puerto 36 y se conectó con el usuario y contraseña del MiceCole Warbench.
4. La función de Python se utilizó para conectarse al endpoint de la base de datos y mostrar/insertar datos en la misma.

**Conclusiones o Acciones:**

1. Se recomienda el uso de Cloud Front para mejorar la atención y gestionar errores en el error page.
2. Se debe crear una política de seguridad en RDS para conectarse de manera segura a los datos en el puerto 36.
3. Se puede utilizar una función de Python para mostrar y insertar datos en la base de datos.
4. Se debe tener en cuenta la localización y actualizar la configuración de seguridad en consecuencia.