**Resumen:**

**Tema:** Laboratorios de Chrome, web estática, S3, CloudFront, RDS, y RDSM

**Puntos Principales:**

1. Se llevó a cabo un laboratorio utilizando Chrome versión 3, donde se almacenaron objetos y se creó una página web estática.
2. Se utilizó CloudFront para distribuir la página web estática a 200 puntos de conexión y mejorar la atención.
3. Se implementó una protección en el Chrome y Routic 53 para proteger el DNS o dominio.
4. Se creó un bucket en S3 y se cargaron archivos, incluyendo una página web estática en una carpeta.
5. Se creó una página de error personalizada en S3 utilizando CloudFront para manejar errores de enlaces y bloqueos de países.
6. Se realizó un segundo laboratorio utilizando RDS y RDSM para crear una base de datos con una instancia y conectarse públicamente.
7. Se creó un grupo de seguridad para conectarse al puerto MiceCole y se creó un Amazon RDSM con todos los requerimientos.
8. Se hizo una conexión al endpoint de RDSM utilizando un usuario y contraseña.
9. Se creó una tabla de estudiantes y se insertó data utilizando una función de Python para mostrar los datos.

**Detalles Importantes:**

- Se explicó cómo se mostrarían las aplicaciones normales en el S3.
- Se crearon carpetas en el S3 para manejar errores de enlaces y bloqueos de países.
- Se probó la página de error personalizada en Chrome utilizando un teléfono con la página subida.
- Se hizo una conexión a los datos en el landa utilizando su propia política.
- Se creó una función de Python para insertar datos y probar la conexión.
- Se utilizó un tester para verificar la conexión y mostrar los datos.

**Conclusiones o Acciones:**

- La distribución de CloudFront mejora la atención y la distribución de la página web estática.
- La protección en Chrome y Routic 53 es importante para proteger el DNS o dominio.
- La creación de una página de error personalizada ayuda a manejar errores de enlaces y bloqueos de países.
- La conexión a los datos en RDS y RDSM es importante para mostrar y insertar data.
- La creación de una función de Python ayuda a insertar y mostrar datos en la base de datos.
- La verificación de la conexión utilizando un tester es importante para garantizar una conexión exitosa.